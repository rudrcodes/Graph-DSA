## Question : 
Given an m x n binary matrix mat, return the distance of the nearest 0 for each cell.

The distance between two adjacent cells is 1.

## Solution :

class Solution {
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
        // TC : O(n*m) + O(n*m*4) ~= O(n*m)
        // SC : O(n*m)
        int r=mat.size();
        int c=mat[0].size();
        
        vector<vector<int>>vis(r,vector<int> (c,0));
        vector<vector<int>>ans(r,vector<int> (c,0));
        
        // {{i,j},distance}
        //distance of 0 from index pair i,j

        queue< pair<pair<int,int>,int > > q;

        //fill the q with all the zeros present in the given matrix
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                if(mat[i][j]==0){
                    vis[i][j]=1;
                    ans[i][j]=0;
                    q.push({{i,j},0});
                }
            }
        }   

        int delRow[]={-1,0,+1,0};
        int delCol[]={0,1,0,-1};

        while(q.empty()==false){
            int row=q.front().first.first;
            int col=q.front().first.second;
            int dist=q.front().second;

            q.pop();

            ans[row][col]=dist;

            for(int i=0;i<4;i++){
                int nr=row+delRow[i];
                int nc=col+delCol[i];
                if(nr>=0 && nc>=0 && nr<r && nc<c && vis[nr][nc]!=1){
                    vis[nr][nc]=1;
                    q.push({{nr,nc},dist+1});
                }
            }

        }


        return ans;        
    }
};
